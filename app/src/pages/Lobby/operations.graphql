mutation UpdateGameSettings($id: uuid!, $input: games_set_input!) {
  update_games_by_pk(pk_columns: { id: $id }, _set: $input) {
    id
    join_code
    starting_letter
    seconds_per_turn
    num_entries_per_player
    allow_card_skips
  }
}

mutation UpdatePlayer($id: uuid!, $input: players_set_input!) {
  update_players_by_pk(pk_columns: { id: $id }, _set: $input) {
    id
    username
    team
    team_sequence
  }
}

mutation RemovePlayer($id: uuid!) {
  delete_players_by_pk(id: $id) {
    id
  }
}

mutation DeleteRound(
  $id: uuid!
  $gameId: uuid!
  $rounds: [rounds_insert_input!]!
) {
  delete_rounds_by_pk(id: $id) {
    id
  }
  insert_games_one(
    object: {
      id: $gameId
      rounds: {
        data: $rounds
        on_conflict: {
          constraint: rounds_pkey
          update_columns: [order_sequence]
        }
      }
    }
    on_conflict: { constraint: games_pkey, update_columns: [id] }
  ) {
    id
    rounds {
      id
      order_sequence
    }
  }
}

mutation UpdateAllRounds($gameId: uuid!, $rounds: [rounds_insert_input!]!) {
  insert_games_one(
    object: {
      id: $gameId
      rounds: {
        data: $rounds
        on_conflict: {
          constraint: rounds_pkey
          update_columns: [order_sequence]
        }
      }
    }
    on_conflict: { constraint: games_pkey, update_columns: [id] }
  ) {
    id
    rounds {
      id
      order_sequence
    }
  }
}

mutation AddRound($object: rounds_insert_input!) {
  insert_rounds_one(object: $object) {
    id
    value
    order_sequence
  }
}
