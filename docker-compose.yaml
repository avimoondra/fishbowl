version: "3.6"
services:
  fishbowl-postgres:
    image: postgres:11
    container_name: fishbowl-postgres
    ports:
      - 5432:5432
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5
  fishbowl-actions-server:
    build: ./actions-server
    image: fishbowl/actions-server:latest
    container_name: fishbowl-actions-server
    ports:
      - 3001:3001
    restart: always
    entrypoint: yarn
    command: run start-debug
    volumes:
      - ./actions-server:/usr/app
      - /usr/app/node_modules
  fishbowl-graphql-engine:
    image: hasura/graphql-engine:v1.3.3.cli-migrations-v2
    container_name: fishbowl-graphql-engine
    ports:
      - 8080:8080
    depends_on:
      - fishbowl-postgres
      - fishbowl-actions-server
    restart: always
    volumes:
      - ./graphql-server/migrations:/hasura-migrations
      - ./graphql-server/metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:password@fishbowl-postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      ACTION_BASE_ENDPOINT: http://fishbowl-actions-server:3001
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key": "FAKEFAKEFAKEFAKEFAKEFAKEFAKEFAKEFAKEFAKEFAKEFAKEFAKEFAKEFAKEFAKE"}'
    healthcheck:
      test: "wget --quiet --spider http://localhost:8080/healthz || exit 1"
      interval: 30s
      timeout: 3s
  fishbowl-app:
    build: ./app
    image: fishbowl/app:latest
    container_name: fishbowl-app
    stdin_open: true
    ports:
      - 3000:3000
    depends_on:
      - fishbowl-graphql-engine
    restart: always
    volumes:
      - ./app:/usr/app
      - /usr/app/node_modules
volumes:
  db_data:
